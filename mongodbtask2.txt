

//Creating multiple collection
 var collectionList=["users","codekata","attendance", "topics",  "tasks","company_drives","mentors"]
    
    collectionList.forEach(function(collectionName)
    {
        db.createCollection(collectionName)
    }       
    ) 
	
//create collection users and insert data
db.users.insertMany([
    {
        userid:1,
        name:"Harish",
        email:"hair@gmail.com",
        
    },
     {
        userid:2,
        name:"Bharathi",
        email:"bharathi@gmail.com",
     
    },
     {
        userid:3,
        name:"Remash",
        email:"remash@gmail.com",
     
    },
     {
        userid:4,
        name:"Selvi",
        email:"Selvi786@gmail.com",
       
    },
     {
        userid:5,
        name:"Vidhya",
        email:"Vidhya@gmail.com",
        
    }
    
    ])

-------------------------------------------------------------------------------------------------------
    // create collection codekata and insert data
    db.createCollection("codekata");

db.codekata.insertMany([
    {
        userid:1,
        problems:70
    },
     {
        userid:2,
        problems:100
    },
     {
        userid:3,
        problems:60
    },
     {
        userid:4,
        problems:95
    },
     {
        userid:5,
        problems:85
    }
    ])  

--------------------------------------------------------------------------------------------------
   // create collection topics and insert data

db.topics.insertMany([
    {   
        topicid:1,
        topic:"HTML",
        topic_date:new Date("5-oct-2020")
    },
     {
         topicid:2,
        topic:"CSS",
        topic_date:new Date("14-oct-2020")
    },
     {
         topicid:3,
        topic:"Bootstrap",
        topic_date:new Date("16-oct-2020")
    },
     {
         topicid:4,
        topic:"JavaScript",
        topic_date:new Date("21-oct-2020")
    },
     {
         topicid:5,
        topic:"React JS",
        topic_date:new Date("30-oct-2020")
    }
    ])

    --------------------------------------------------------------------------------------------------
    // create collection tasks and insert data

    db.tasks.insertMany([
    {
        taskid:1,
        topicid:1,
        userid:1,
        task:"HTML task",
        due_date:new Date("5-oct-2020"),
        submitted:false
    },
    {
        taskid:2,
        topicid:2,
        userid:2,
        task:"CSS task",
        due_date:new Date("14-oct-2020"),
        submitted:true
    },
     {
        taskid:3,
        topicid:3,
        userid:3,
        task:"Bootstrap task",
        due_date:new Date("16-oct-2020"),
        submitted:true
    },
      {
        taskid:4,
        topicid:4,
        userid:4,
        task:"JavaScript task",
        due_date:new Date("21-oct-2020"),
        submitted:false
    },
     {
        taskid:5,
        topicid:5,
        userid:5,
        task:"React JS task",
        due_date:new Date("30-oct-2020"),
        submitted:true
    }
    ])

      --------------------------------------------------------------------------------------------------
    // create collection attendance and insert data

      db.attendance.insertMany([
    {
        userid:1,
        topicid:2,
        attended:true
    },
     {
        userid:2,
        topicid:1,
        attended:true
    },
     {
        userid:3,
        topicid:5,
        attended:false
    },
    {
        userid:4,
        topicid:3,
        attended:true
    },
    {
        userid:5,
        topicid:4,
        attended:false
    }
    
    ])
    
    --------------------------------------------------------------------------------------------------
    //create collection mentors and insert data

    db.mentors.insertMany([
    {
        mentorid:1,
        mentorname:"Sanjai",
        mentor_email:"sanjai@gmail.com",
        mentee_count: 15
    },
      {
        mentorid:2,
        mentorname:"Sathish",
        mentor_email:"Sathish@gmail.com",
        mentee_count:20
    },
      {
        mentorid:3,
        mentorname:"Tamilvanan",
        mentor_email:"Tamilvanan@gmail.com",
        mentee_count:10
    },
      {
        mentorid:4,
        mentorname:"Kumar",
        mentor_email:"Kumar@gmail.com",
        mentee_count:18
    },
      {
        mentorid:5,
        mentorname:"Ravindran",
        mentor_email:"Ravindran@gmail.com",
        mentee_count:25
    }
    ])

    --------------------------------------------------------------------------------------------------
    //create collection company drives and insert data

      db.comapnydrives.insertMany([
    {
        userid:1,
        drive_date:new Date("5-oct-2020"),
        company:"WNS"
    },
     {
        userid:1,
        drive_date:new Date("8-oct-2020"),
        company:"Techmahandra"
    },
     {
        userid:2,
        drive_date:new Date("23-oct-2020"),
        company:"Amazon"
    },
     {
        userid:3,
        drive_date:new Date("28-oct-2020"),
        company:"CTS"
    },
     {
        userid:4,
        drive_date:new Date("2-nov-2020"),
        company:"Infosys"
    }
    ])
    
//1.Find all the topics and tasks which are thought in the month of October
db.topics.aggregate([
    {
        $lookup: {
               from: "tasks",
               localField: "topicid",
               foreignField: "topicid",
               as: "topicidTask_Oct"
             }
    },
    {
        $match:{$and:[{$or:[{topic_date:{$gt:new Date("30-sep-2020")}},{topic_date:{$lt:new Date("1-nov-2020")}}]},
        {$or:[{"topicidTask_Oct.due_date":{$gt:new Date("30-sep-2020")}},{"topicidTask_Oct.due_date":{$lt:new Date("1-nov-2020")}}]}
        ]}
    }
])


//2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.comapnydrives.find({$or:[{drive_date:{$gte:new Date("15-oct-2020")}},
{drive_date:{$lte:new Date("31-oct-2020")}}]})


//3.Find all the company drives and students who are appeared for the placement.
db.comapnydrives.aggregate([
    {
        $lookup:{
            from:"users",
            localField:"userid",
            foreignField:"userid",
            as:"placement"
        }
    }  
])


//4.Find the number of problems solved by the user in codekata
    db.codekata.aggregate([
    {
        $lookup:{
            from: 'users',
            localField: 'userid',
            foreignField: 'userid',
            as: 'user_details'
        }
    },
    {
        $project: { 
            'name' : '$user_details.name',
            'problems': '$problems'
        }
    }
])

//5.Find all the mentors with who has the mentee's count more than 15

 db.mentors.find({ mentee_count:{$gt:15}})

                  (or)

    db.users.aggregate([
        {$lookup: {
               from: "mentors",
               localField: "userid",
               foreignField: "mentorid",
               as: "mentorInfo"
             }},
             {
                $match:{"mentorInfo.mentee_count":{$gt:15}}
            }
        ])
